{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\big test project\\\\01-starting-project\\\\2-starting-project\\\\src\\\\components\\\\Pages\\\\ContactInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from \"../Pages/ContactInfo.module.css\";\nimport ContactItem from \"../Pages/ContactItem\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencil, faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactInfo = props => {\n  _s();\n\n  const [formIsShown, setFormIsShown] = useState(false); // const [enteredName, setEnteredName] = useState(\"\");\n  // const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n  // const [enteredSurName, setEnteredSurName] = useState(\"\");\n\n  const showEl = () => {\n    setFormIsShown(true);\n  }; // const inputName = (event) => {\n  //   setEnteredName(event.target.value);\n  // };\n  // const inputSurName = (event) => {\n  //   setEnteredSurName(event.target.value);\n  // };\n  // const preventDefaultHandler = (event) => {\n  //   event.preventDefault();\n  //   if (enteredName.trim() === \"\") {\n  //     setEnteredNameIsValid(false);\n  //     return;\n  //   }\n  //   setEnteredNameIsValid(true);\n  //   console.log(enteredName);\n  //   console.log(enteredSurName);\n  // };\n\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.firstName) {\n      errors.firstName = \"Required\";\n    } else if (values.firstName.length < 3) {\n      errors.firstName = \"Must be 3 characters or more\";\n    }\n\n    if (!values.lastName) {\n      errors.lastName = \"Required\";\n    } else if (values.lastName.length < 4) {\n      errors.lastName = \"Must be 4 characters or more\";\n    }\n\n    if (!values.mobile) {\n      errors.mobile = \"Required\";\n    } else if (values.mobile.length < 11) {\n      errors.mobile = \"Must be 11 characters or more\";\n    }\n\n    if (!values.home) {\n      errors.home = \"Required\";\n    } else if (values.home.length < 11) {\n      errors.home = \"Must be 11 characters or more\";\n    }\n\n    if (!values.company) {\n      errors.company = \"Required\";\n    } else if (values.company.length < 4) {\n      errors.company = \"Must be 4 characters or more\";\n    }\n\n    if (!values.work) {\n      errors.work = \"Required\";\n    } else if (values.work.length < 11) {\n      errors.work = \"Must be 11 characters or more\";\n    }\n\n    if (!values.notes) {\n      errors.notes = \"Required\";\n    } else if (values.notes.length < 5) {\n      errors.notes = \"Must be 5 characters or more\";\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      mobile: \"\",\n      home: \"\",\n      company: \"\",\n      work: \"\",\n      notes: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes[\"contact-info\"],\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes[\"contact-better\"],\n      children: [!formIsShown ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttons,\n        children: [!formIsShown ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.pencil,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPencil\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: classes.check,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.close,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes[\"add-new-user-btn\"],\n          onClick: showEl,\n          children: \"Add New Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), !formIsShown ? /*#__PURE__*/_jsxDEV(ContactItem, {\n        name: props.contact.name,\n        mobile: props.contact.mobile,\n        home: props.contact.home,\n        company: props.contact.company,\n        work: props.contact.work,\n        notes: props.contact.notes\n      }, props.contact.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes[\"add-contact-wrapper\"],\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes[\"image-wrapper\"],\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://ziadfathy.github.io/ZfTemplate/images/01.jpg\",\n            alt: \"#\",\n            width: \"120px\",\n            height: \"120px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"No Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes[\"inputs-wrapper\"],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes[\"contact-wrapper\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"first-name\",\n              children: \"First Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formik.errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n              className: classes[\"contacts-inputs\"],\n              placeholder: \"First Name\",\n              type: \"text\",\n              name: \"firstName\",\n              id: \"firstName\",\n              onChange: formik.handleChange,\n              value: formik.values.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes[\"contact-wrapper\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"last-name\",\n              children: \"Last Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: classes[\"contacts-inputs\"],\n              placeholder: \"Last Name\",\n              type: \"text\",\n              name: \"lastName\",\n              id: \"lastName\",\n              onChange: formik.handleChange,\n              value: formik.values.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes[\"contact-wrapper\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"mobile\",\n              children: \"Mobile:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: classes[\"contacts-inputs\"],\n              placeholder: \"Mobile\",\n              type: \"text\",\n              name: \"mobile\",\n              id: \"mobile\",\n              onChange: formik.handleChange,\n              value: formik.values.mobile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes[\"contact-wrapper\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"home\",\n              children: \"Home:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: classes[\"contacts-inputs\"],\n              placeholder: \"Home\",\n              type: \"text\",\n              name: \"home\",\n              id: \"home\",\n              onChange: formik.handleChange,\n              value: formik.values.home\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes[\"contact-wrapper\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"company\",\n              children: \"Company:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: classes[\"contacts-inputs\"],\n              placeholder: \"Company\",\n              type: \"text\",\n              name: \"company\",\n              id: \"company\",\n              onChange: formik.handleChange,\n              value: formik.values.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes[\"contact-wrapper\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"work\",\n              children: \"Work:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: classes[\"contacts-inputs\"],\n              placeholder: \"Work\",\n              type: \"text\",\n              name: \"work\",\n              id: \"work\",\n              onChange: formik.handleChange,\n              value: formik.values.work\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes[\"contact-wrapper\"],\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"notes\",\n              children: \"Notes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: classes.notes,\n              placeholder: \"Notes\",\n              type: \"textarea\",\n              rows: \"5\",\n              name: \"notes\",\n              id: \"notes\",\n              onChange: formik.handleChange,\n              value: formik.values.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: classes.submitBtn,\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactInfo, \"XHqYrxJ39JJdP1X1FmiW35x/QVE=\", false, function () {\n  return [useFormik];\n});\n\n_c = ContactInfo;\nexport default ContactInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactInfo\");","map":{"version":3,"sources":["D:/React/big test project/01-starting-project/2-starting-project/src/components/Pages/ContactInfo.js"],"names":["React","useState","classes","ContactItem","FontAwesomeIcon","faPencil","faTimes","faCheck","useFormik","ContactInfo","props","formIsShown","setFormIsShown","showEl","validate","values","errors","firstName","length","lastName","mobile","home","company","work","notes","formik","initialValues","onSubmit","alert","JSON","stringify","buttons","pencil","check","close","contact","name","id","handleSubmit","handleChange","submitBtn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport classes from \"../Pages/ContactInfo.module.css\";\r\n\r\nimport ContactItem from \"../Pages/ContactItem\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencil, faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst ContactInfo = (props) => {\r\n  const [formIsShown, setFormIsShown] = useState(false);\r\n  // const [enteredName, setEnteredName] = useState(\"\");\r\n  // const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\r\n  // const [enteredSurName, setEnteredSurName] = useState(\"\");\r\n\r\n  const showEl = () => {\r\n    setFormIsShown(true);\r\n  };\r\n\r\n  // const inputName = (event) => {\r\n  //   setEnteredName(event.target.value);\r\n  // };\r\n\r\n  // const inputSurName = (event) => {\r\n  //   setEnteredSurName(event.target.value);\r\n  // };\r\n\r\n  // const preventDefaultHandler = (event) => {\r\n  //   event.preventDefault();\r\n\r\n  //   if (enteredName.trim() === \"\") {\r\n  //     setEnteredNameIsValid(false);\r\n  //     return;\r\n  //   }\r\n\r\n  //   setEnteredNameIsValid(true);\r\n\r\n  //   console.log(enteredName);\r\n  //   console.log(enteredSurName);\r\n  // };\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.firstName) {\r\n      errors.firstName = \"Required\";\r\n    } else if (values.firstName.length < 3) {\r\n      errors.firstName = \"Must be 3 characters or more\";\r\n    }\r\n\r\n    if (!values.lastName) {\r\n      errors.lastName = \"Required\";\r\n    } else if (values.lastName.length < 4) {\r\n      errors.lastName = \"Must be 4 characters or more\";\r\n    }\r\n\r\n    if (!values.mobile) {\r\n      errors.mobile = \"Required\";\r\n    } else if (values.mobile.length < 11) {\r\n      errors.mobile = \"Must be 11 characters or more\";\r\n    }\r\n\r\n    if (!values.home) {\r\n      errors.home = \"Required\";\r\n    } else if (values.home.length < 11) {\r\n      errors.home = \"Must be 11 characters or more\";\r\n    }\r\n\r\n    if (!values.company) {\r\n      errors.company = \"Required\";\r\n    } else if (values.company.length < 4) {\r\n      errors.company = \"Must be 4 characters or more\";\r\n    }\r\n\r\n    if (!values.work) {\r\n      errors.work = \"Required\";\r\n    } else if (values.work.length < 11) {\r\n      errors.work = \"Must be 11 characters or more\";\r\n    }\r\n\r\n    if (!values.notes) {\r\n      errors.notes = \"Required\";\r\n    } else if (values.notes.length < 5) {\r\n      errors.notes = \"Must be 5 characters or more\";\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      mobile: \"\",\r\n      home: \"\",\r\n      company: \"\",\r\n      work: \"\",\r\n      notes: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <section className={classes[\"contact-info\"]}>\r\n      <main className={classes[\"contact-better\"]}>\r\n        {!formIsShown ? (\r\n          <div className={classes.buttons}>\r\n            {!formIsShown ? (\r\n              <button className={classes.pencil}>\r\n                <FontAwesomeIcon icon={faPencil} />\r\n              </button>\r\n            ) : (\r\n              <button type=\"submit\" className={classes.check}>\r\n                <FontAwesomeIcon icon={faCheck} />\r\n              </button>\r\n            )}\r\n            <button className={classes.close}>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </button>\r\n            <button className={classes[\"add-new-user-btn\"]} onClick={showEl}>\r\n              Add New Contact\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.buttons}></div>\r\n        )}\r\n        {!formIsShown ? (\r\n          <ContactItem\r\n            key={props.contact.id}\r\n            name={props.contact.name}\r\n            mobile={props.contact.mobile}\r\n            home={props.contact.home}\r\n            company={props.contact.company}\r\n            work={props.contact.work}\r\n            notes={props.contact.notes}\r\n          />\r\n        ) : (\r\n          <form\r\n            className={classes[\"add-contact-wrapper\"]}\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <div className={classes[\"image-wrapper\"]}>\r\n              <img\r\n                src=\"https://ziadfathy.github.io/ZfTemplate/images/01.jpg\"\r\n                alt=\"#\"\r\n                width=\"120px\"\r\n                height=\"120px\"\r\n              ></img>\r\n              <h1>No Name</h1>\r\n            </div>\r\n            <div className={classes[\"inputs-wrapper\"]}>\r\n              <div className={classes[\"contact-wrapper\"]}>\r\n                <label htmlFor=\"first-name\">First Name:</label>\r\n                {formik.errors.firstName ? (\r\n                  <p>{formik.errors.firstName}</p>\r\n                ) : null}\r\n                <input\r\n                  className={classes[\"contacts-inputs\"]}\r\n                  placeholder=\"First Name\"\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  id=\"firstName\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.firstName}\r\n                ></input>\r\n              </div>\r\n              <div className={classes[\"contact-wrapper\"]}>\r\n                <label htmlFor=\"last-name\">Last Name:</label>\r\n                <input\r\n                  className={classes[\"contacts-inputs\"]}\r\n                  placeholder=\"Last Name\"\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  id=\"lastName\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.lastName}\r\n                ></input>\r\n              </div>\r\n              <div className={classes[\"contact-wrapper\"]}>\r\n                <label htmlFor=\"mobile\">Mobile:</label>\r\n                <input\r\n                  className={classes[\"contacts-inputs\"]}\r\n                  placeholder=\"Mobile\"\r\n                  type=\"text\"\r\n                  name=\"mobile\"\r\n                  id=\"mobile\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.mobile}\r\n                ></input>\r\n              </div>\r\n              <div className={classes[\"contact-wrapper\"]}>\r\n                <label htmlFor=\"home\">Home:</label>\r\n                <input\r\n                  className={classes[\"contacts-inputs\"]}\r\n                  placeholder=\"Home\"\r\n                  type=\"text\"\r\n                  name=\"home\"\r\n                  id=\"home\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.home}\r\n                ></input>\r\n              </div>\r\n              <div className={classes[\"contact-wrapper\"]}>\r\n                <label htmlFor=\"company\">Company:</label>\r\n                <input\r\n                  className={classes[\"contacts-inputs\"]}\r\n                  placeholder=\"Company\"\r\n                  type=\"text\"\r\n                  name=\"company\"\r\n                  id=\"company\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.company}\r\n                ></input>\r\n              </div>\r\n              <div className={classes[\"contact-wrapper\"]}>\r\n                <label htmlFor=\"work\">Work:</label>\r\n                <input\r\n                  className={classes[\"contacts-inputs\"]}\r\n                  placeholder=\"Work\"\r\n                  type=\"text\"\r\n                  name=\"work\"\r\n                  id=\"work\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.work}\r\n                ></input>\r\n              </div>\r\n              <div className={classes[\"contact-wrapper\"]}>\r\n                <label htmlFor=\"notes\">Notes:</label>\r\n                <textarea\r\n                  className={classes.notes}\r\n                  placeholder=\"Notes\"\r\n                  type=\"textarea\"\r\n                  rows=\"5\"\r\n                  name=\"notes\"\r\n                  id=\"notes\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.notes}\r\n                ></textarea>\r\n              </div>\r\n              <button type=\"submit\" className={classes.submitBtn}>\r\n                Accept\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </main>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContactInfo;\r\n"]},"metadata":{},"sourceType":"module"}